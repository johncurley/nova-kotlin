{
  "scopeName": "source.kotlin",
  "name": "Kotlin",
  "fileTypes": ["kt", "kts"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#classes" },
    { "include": "#functions" },
    { "include": "#annotations" },
    { "include": "#generics" },
    { "include": "#packages" },
    { "include": "#operators" },
    { "include": "#lambdas" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.double-slash.kotlin", "match": "//.*$" },
        { "name": "comment.block.kotlin", "begin": "/\\*", "end": "\\*/" }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.kotlin",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape.kotlin", "match": "\\\\." },
            { "include": "#stringTemplates" }
          ]
        },
        { "name": "string.quoted.raw.kotlin", "begin": "\"\"\"", "end": "\"\"\"" },
        {
          "name": "string.quoted.single.kotlin",
          "begin": "'",
          "end": "'",
          "patterns": [
            { "name": "constant.character.escape.kotlin", "match": "\\\\." }
          ]
        }
      ]
    },
    "stringTemplates": {
      "patterns": [
        {
          "name": "variable.parameter.template.kotlin",
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
        },
        {
          "name": "meta.embedded.kotlin",
          "begin": "\\$\\{",
          "end": "\\}",
          "patterns": [
            { "include": "$self" }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        { "name": "constant.numeric.kotlin", "match": "\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?[fFdDlL]?\\b" }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.kotlin",
          "match": "\\b(?:if|else|when|for|while|do|break|continue|return|throw|try|catch|finally)\\b"
        },
        {
          "name": "keyword.declaration.kotlin",
          "match": "\\b(?:fun|val|var|class|object|interface|package|import|typealias)\\b"
        },
        {
          "name": "keyword.modifier.kotlin",
          "match": "\\b(?:public|private|protected|internal|open|abstract|final|override|lateinit|const|suspend|inline|noinline|crossinline|companion|sealed|data|inner|tailrec|external)\\b"
        },
        { "name": "keyword.operator.kotlin", "match": "\\b(?:in|is|as|typeof)\\b" },
        { "name": "constant.language.kotlin", "match": "\\b(?:true|false|null)\\b" }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.kotlin",
          "match": "\\b(?:Int|Long|Float|Double|Boolean|Char|String|Unit|Any|Nothing|Array|List|Set|Map|MutableList|MutableSet|MutableMap)\\b"
        }
      ]
    },
    "classes": {
      "patterns": [
        {
          "name": "entity.name.type.class.kotlin",
          "match": "\\b(class|interface|object)\\s+([A-Z][A-Za-z0-9_]*)",
          "captures": {
            "1": { "name": "keyword.declaration.kotlin" },
            "2": { "name": "entity.name.type.kotlin" }
          }
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.declaration.kotlin",
          "match": "\\bfun\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": { "1": { "name": "entity.name.function.kotlin" } }
        },
        {
          "name": "support.function.call.kotlin",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "name": "storage.type.annotation.kotlin",
          "match": "@[A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*"
        }
      ]
    },
    "generics": {
      "patterns": [
        {
          "name": "meta.generic.kotlin",
          "begin": "<",
          "end": ">",
          "patterns": [
            { "name": "storage.type.kotlin", "match": "\\b[A-Z][A-Za-z0-9_]*\\b" }
          ]
        }
      ]
    },
    "packages": {
      "patterns": [
        { "name": "meta.package.kotlin", "match": "\\bpackage\\s+([a-zA-Z0-9_.]+)" },
        { "name": "meta.import.kotlin", "match": "\\bimport\\s+([a-zA-Z0-9_.]+)" }
      ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.symbol.kotlin", "match": "\\?|!!|\\.\\.|::|\\?:|=>|<-|->" }
      ]
    },
    "lambdas": {
      "patterns": [
        {
          "name": "meta.lambda.kotlin",
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "name": "keyword.operator.arrow.kotlin",
              "match": "->"
            },
            { "include": "$self" }
          ]
        }
      ]
    }
  },
  "uuid": "e481ab7a-81f1-4a56-8bbf-2c8a5d2e2e22"
}
